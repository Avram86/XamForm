//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.10.8.0 (NJsonSchema v10.3.11.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"

namespace NSwag
{
    using Newtonsoft.Json;
    using System = global::System;
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StatusResponse : System.ComponentModel.INotifyPropertyChanged
    {
        private string _statusCode;
        private string _statusInfo;
    
        [Newtonsoft.Json.JsonProperty("statusCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string StatusCode
        {
            get { return _statusCode; }
            set
            {
                if (_statusCode != value)
                {
                    _statusCode = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("statusInfo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string StatusInfo
        {
            get { return _statusInfo; }
            set
            {
                if (_statusInfo != value)
                {
                    _statusInfo = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PackageInfo : System.ComponentModel.INotifyPropertyChanged
    {
        private string _version;
    
        [Newtonsoft.Json.JsonProperty("version", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Version
        {
            get { return _version; }
            set
            {
                if (_version != value)
                {
                    _version = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Package : System.ComponentModel.INotifyPropertyChanged
    {
        private int _byteCount;
        private byte[] _packageArray;
    
        [Newtonsoft.Json.JsonProperty("byteCount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int ByteCount
        {
            get { return _byteCount; }
            set
            {
                if (_byteCount != value)
                {
                    _byteCount = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("packageArray", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public byte[] PackageArray
        {
            get { return _packageArray; }
            set
            {
                if (_packageArray != value)
                {
                    _packageArray = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class F_COTETVA : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _cota;
        private double _coeficient;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("cota", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Cota
        {
            get { return _cota; }
            set
            {
                if (_cota != value)
                {
                    _cota = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("coeficient", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Coeficient
        {
            get { return _coeficient; }
            set
            {
                if (_coeficient != value)
                {
                    _coeficient = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CO_AGENTI : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _agent;
        private string _pass;
        private string _gestiuneag;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("agent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Agent
        {
            get { return _agent; }
            set
            {
                if (_agent != value)
                {
                    _agent = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Pass
        {
            get { return _pass; }
            set
            {
                if (_pass != value)
                {
                    _pass = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("gestiuneag", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Gestiuneag
        {
            get { return _gestiuneag; }
            set
            {
                if (_gestiuneag != value)
                {
                    _gestiuneag = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Operator : System.ComponentModel.INotifyPropertyChanged
    {
        private string _idoperator;
        private string _operator1;
        private string _parola;
        private string _gestiune;
    
        [Newtonsoft.Json.JsonProperty("idoperator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Idoperator
        {
            get { return _idoperator; }
            set
            {
                if (_idoperator != value)
                {
                    _idoperator = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("operator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Operator1
        {
            get { return _operator1; }
            set
            {
                if (_operator1 != value)
                {
                    _operator1 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("parola", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Parola
        {
            get { return _parola; }
            set
            {
                if (_parola != value)
                {
                    _parola = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("gestiune", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Gestiune
        {
            get { return _gestiune; }
            set
            {
                if (_gestiune != value)
                {
                    _gestiune = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Gestiune : System.ComponentModel.INotifyPropertyChanged
    {
        private string _idgestiune;
        private string _codgestiune;
        private string _gestiune1;
    
        [Newtonsoft.Json.JsonProperty("idgestiune", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Idgestiune
        {
            get { return _idgestiune; }
            set
            {
                if (_idgestiune != value)
                {
                    _idgestiune = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("codgestiune", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Codgestiune
        {
            get { return _codgestiune; }
            set
            {
                if (_codgestiune != value)
                {
                    _codgestiune = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("gestiune", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Gestiune1
        {
            get { return _gestiune1; }
            set
            {
                if (_gestiune1 != value)
                {
                    _gestiune1 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class F_ARTICOLE : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private int _idart;
        private string _grupa;
        private string _subgrupa;
        private string _articol;
        private string _cod;
        private string _codbare;
        private string _codcantar;
        private int _zileexpirare;
        private string _marime;
        private string _culoare;
        private string _um;
        private double _ctva;
        private double _pachiz;
        private string _deftiptvain;
        private string _deftiptva;
        private string _deftiptvaliv;
        private double _pretlista;
        private double _pretlistacutva;
        private int _lapromotie;
        private double? _pretvechi;
        private double? _pretvechicutva;
        private int _stocabil;
        private double? _stocmin;
        private double? _stocmax;
        private string _observatii;
        private int _inactiv;
        private int _isartpos;
        private string _tiparticol;
        private int _arereteta;
        private double? _timppreparare;
        private int _ordine;
        private int _isartcant;
        private int _ismeniulzilei;
        private string _felnr;
        private int _iscompmeniulz;
        private int _isbacsis;
        private int _onweb;
        private int _respromo;
        private double _adaos;
        private double _adaosminim;
        private double _adaosstandard;
        private double _diS1;
        private double _p1;
        private double _diS2;
        private double _p2;
        private double _diS3;
        private double _p3;
        private double _diS4;
        private double _p4;
        private string _moneda;
        private double _greutate;
        private string _infoarticol;
        private string _furnizpref;
        private string _imagineart;
        private string _urlimagineart;
        private string _imaginepict;
        private string _urlimaginepict;
        private int _fractionabil;
        private double _cantfract;
        private string _umfract;
        private int _ispvmpgen;
        private string _usermodif;
        private System.DateTimeOffset? _lastmodif;
        private System.DateTimeOffset? _lastsync;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("idart", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Idart
        {
            get { return _idart; }
            set
            {
                if (_idart != value)
                {
                    _idart = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("grupa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Grupa
        {
            get { return _grupa; }
            set
            {
                if (_grupa != value)
                {
                    _grupa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("subgrupa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Subgrupa
        {
            get { return _subgrupa; }
            set
            {
                if (_subgrupa != value)
                {
                    _subgrupa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("articol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Articol
        {
            get { return _articol; }
            set
            {
                if (_articol != value)
                {
                    _articol = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("cod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Cod
        {
            get { return _cod; }
            set
            {
                if (_cod != value)
                {
                    _cod = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("codbare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Codbare
        {
            get { return _codbare; }
            set
            {
                if (_codbare != value)
                {
                    _codbare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("codcantar", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Codcantar
        {
            get { return _codcantar; }
            set
            {
                if (_codcantar != value)
                {
                    _codcantar = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("zileexpirare", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Zileexpirare
        {
            get { return _zileexpirare; }
            set
            {
                if (_zileexpirare != value)
                {
                    _zileexpirare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("marime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Marime
        {
            get { return _marime; }
            set
            {
                if (_marime != value)
                {
                    _marime = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("culoare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Culoare
        {
            get { return _culoare; }
            set
            {
                if (_culoare != value)
                {
                    _culoare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("um", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Um
        {
            get { return _um; }
            set
            {
                if (_um != value)
                {
                    _um = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ctva", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Ctva
        {
            get { return _ctva; }
            set
            {
                if (_ctva != value)
                {
                    _ctva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pachiz", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pachiz
        {
            get { return _pachiz; }
            set
            {
                if (_pachiz != value)
                {
                    _pachiz = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("deftiptvain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Deftiptvain
        {
            get { return _deftiptvain; }
            set
            {
                if (_deftiptvain != value)
                {
                    _deftiptvain = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("deftiptva", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Deftiptva
        {
            get { return _deftiptva; }
            set
            {
                if (_deftiptva != value)
                {
                    _deftiptva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("deftiptvaliv", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Deftiptvaliv
        {
            get { return _deftiptvaliv; }
            set
            {
                if (_deftiptvaliv != value)
                {
                    _deftiptvaliv = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretlista", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pretlista
        {
            get { return _pretlista; }
            set
            {
                if (_pretlista != value)
                {
                    _pretlista = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretlistacutva", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pretlistacutva
        {
            get { return _pretlistacutva; }
            set
            {
                if (_pretlistacutva != value)
                {
                    _pretlistacutva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("lapromotie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Lapromotie
        {
            get { return _lapromotie; }
            set
            {
                if (_lapromotie != value)
                {
                    _lapromotie = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretvechi", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Pretvechi
        {
            get { return _pretvechi; }
            set
            {
                if (_pretvechi != value)
                {
                    _pretvechi = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretvechicutva", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Pretvechicutva
        {
            get { return _pretvechicutva; }
            set
            {
                if (_pretvechicutva != value)
                {
                    _pretvechicutva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("stocabil", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Stocabil
        {
            get { return _stocabil; }
            set
            {
                if (_stocabil != value)
                {
                    _stocabil = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("stocmin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Stocmin
        {
            get { return _stocmin; }
            set
            {
                if (_stocmin != value)
                {
                    _stocmin = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("stocmax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Stocmax
        {
            get { return _stocmax; }
            set
            {
                if (_stocmax != value)
                {
                    _stocmax = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("observatii", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Observatii
        {
            get { return _observatii; }
            set
            {
                if (_observatii != value)
                {
                    _observatii = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("inactiv", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Inactiv
        {
            get { return _inactiv; }
            set
            {
                if (_inactiv != value)
                {
                    _inactiv = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isartpos", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Isartpos
        {
            get { return _isartpos; }
            set
            {
                if (_isartpos != value)
                {
                    _isartpos = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tiparticol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tiparticol
        {
            get { return _tiparticol; }
            set
            {
                if (_tiparticol != value)
                {
                    _tiparticol = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("arereteta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Arereteta
        {
            get { return _arereteta; }
            set
            {
                if (_arereteta != value)
                {
                    _arereteta = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("timppreparare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Timppreparare
        {
            get { return _timppreparare; }
            set
            {
                if (_timppreparare != value)
                {
                    _timppreparare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ordine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Ordine
        {
            get { return _ordine; }
            set
            {
                if (_ordine != value)
                {
                    _ordine = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isartcant", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Isartcant
        {
            get { return _isartcant; }
            set
            {
                if (_isartcant != value)
                {
                    _isartcant = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ismeniulzilei", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Ismeniulzilei
        {
            get { return _ismeniulzilei; }
            set
            {
                if (_ismeniulzilei != value)
                {
                    _ismeniulzilei = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("felnr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Felnr
        {
            get { return _felnr; }
            set
            {
                if (_felnr != value)
                {
                    _felnr = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("iscompmeniulz", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Iscompmeniulz
        {
            get { return _iscompmeniulz; }
            set
            {
                if (_iscompmeniulz != value)
                {
                    _iscompmeniulz = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isbacsis", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Isbacsis
        {
            get { return _isbacsis; }
            set
            {
                if (_isbacsis != value)
                {
                    _isbacsis = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("onweb", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Onweb
        {
            get { return _onweb; }
            set
            {
                if (_onweb != value)
                {
                    _onweb = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("respromo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Respromo
        {
            get { return _respromo; }
            set
            {
                if (_respromo != value)
                {
                    _respromo = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("adaos", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Adaos
        {
            get { return _adaos; }
            set
            {
                if (_adaos != value)
                {
                    _adaos = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("adaosminim", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Adaosminim
        {
            get { return _adaosminim; }
            set
            {
                if (_adaosminim != value)
                {
                    _adaosminim = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("adaosstandard", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Adaosstandard
        {
            get { return _adaosstandard; }
            set
            {
                if (_adaosstandard != value)
                {
                    _adaosstandard = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("diS1", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double DiS1
        {
            get { return _diS1; }
            set
            {
                if (_diS1 != value)
                {
                    _diS1 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("p1", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double P1
        {
            get { return _p1; }
            set
            {
                if (_p1 != value)
                {
                    _p1 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("diS2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double DiS2
        {
            get { return _diS2; }
            set
            {
                if (_diS2 != value)
                {
                    _diS2 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("p2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double P2
        {
            get { return _p2; }
            set
            {
                if (_p2 != value)
                {
                    _p2 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("diS3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double DiS3
        {
            get { return _diS3; }
            set
            {
                if (_diS3 != value)
                {
                    _diS3 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("p3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double P3
        {
            get { return _p3; }
            set
            {
                if (_p3 != value)
                {
                    _p3 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("diS4", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double DiS4
        {
            get { return _diS4; }
            set
            {
                if (_diS4 != value)
                {
                    _diS4 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("p4", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double P4
        {
            get { return _p4; }
            set
            {
                if (_p4 != value)
                {
                    _p4 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("moneda", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Moneda
        {
            get { return _moneda; }
            set
            {
                if (_moneda != value)
                {
                    _moneda = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("greutate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Greutate
        {
            get { return _greutate; }
            set
            {
                if (_greutate != value)
                {
                    _greutate = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("infoarticol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Infoarticol
        {
            get { return _infoarticol; }
            set
            {
                if (_infoarticol != value)
                {
                    _infoarticol = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("furnizpref", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Furnizpref
        {
            get { return _furnizpref; }
            set
            {
                if (_furnizpref != value)
                {
                    _furnizpref = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("imagineart", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Imagineart
        {
            get { return _imagineart; }
            set
            {
                if (_imagineart != value)
                {
                    _imagineart = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("urlimagineart", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urlimagineart
        {
            get { return _urlimagineart; }
            set
            {
                if (_urlimagineart != value)
                {
                    _urlimagineart = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("imaginepict", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Imaginepict
        {
            get { return _imaginepict; }
            set
            {
                if (_imaginepict != value)
                {
                    _imaginepict = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("urlimaginepict", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urlimaginepict
        {
            get { return _urlimaginepict; }
            set
            {
                if (_urlimaginepict != value)
                {
                    _urlimaginepict = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("fractionabil", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Fractionabil
        {
            get { return _fractionabil; }
            set
            {
                if (_fractionabil != value)
                {
                    _fractionabil = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("cantfract", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Cantfract
        {
            get { return _cantfract; }
            set
            {
                if (_cantfract != value)
                {
                    _cantfract = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("umfract", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Umfract
        {
            get { return _umfract; }
            set
            {
                if (_umfract != value)
                {
                    _umfract = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ispvmpgen", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Ispvmpgen
        {
            get { return _ispvmpgen; }
            set
            {
                if (_ispvmpgen != value)
                {
                    _ispvmpgen = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("usermodif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Usermodif
        {
            get { return _usermodif; }
            set
            {
                if (_usermodif != value)
                {
                    _usermodif = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("lastmodif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastmodif
        {
            get { return _lastmodif; }
            set
            {
                if (_lastmodif != value)
                {
                    _lastmodif = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("lastsync", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsync
        {
            get { return _lastsync; }
            set
            {
                if (_lastsync != value)
                {
                    _lastsync = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RS_MESEREST : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _salA_ID;
        private string _numemasa;
        private int _masajoc;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("salA_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SalA_ID
        {
            get { return _salA_ID; }
            set
            {
                if (_salA_ID != value)
                {
                    _salA_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("numemasa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Numemasa
        {
            get { return _numemasa; }
            set
            {
                if (_numemasa != value)
                {
                    _numemasa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("masajoc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Masajoc
        {
            get { return _masajoc; }
            set
            {
                if (_masajoc != value)
                {
                    _masajoc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Categorie : System.ComponentModel.INotifyPropertyChanged
    {
        private string _idcategorie;
        private string _categorie1;
    
        [Newtonsoft.Json.JsonProperty("idcategorie", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Idcategorie
        {
            get { return _idcategorie; }
            set
            {
                if (_idcategorie != value)
                {
                    _idcategorie = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("categorie", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Categorie1
        {
            get { return _categorie1; }
            set
            {
                if (_categorie1 != value)
                {
                    _categorie1 = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ArticolStoc : System.ComponentModel.INotifyPropertyChanged
    {
        private string _idarticol;
        private string _denumire;
        private string _cod;
        private string _codbare;
        private string _um;
        private double _ctva;
        private string _categorieid;
        private double _pretachizitie;
        private double _pretvanzare;
        private double _stoc;
        private string _gestiunea;
    
        [Newtonsoft.Json.JsonProperty("idarticol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Idarticol
        {
            get { return _idarticol; }
            set
            {
                if (_idarticol != value)
                {
                    _idarticol = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("denumire", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Denumire
        {
            get { return _denumire; }
            set
            {
                if (_denumire != value)
                {
                    _denumire = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("cod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Cod
        {
            get { return _cod; }
            set
            {
                if (_cod != value)
                {
                    _cod = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("codbare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Codbare
        {
            get { return _codbare; }
            set
            {
                if (_codbare != value)
                {
                    _codbare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("um", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Um
        {
            get { return _um; }
            set
            {
                if (_um != value)
                {
                    _um = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ctva", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Ctva
        {
            get { return _ctva; }
            set
            {
                if (_ctva != value)
                {
                    _ctva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("categorieid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Categorieid
        {
            get { return _categorieid; }
            set
            {
                if (_categorieid != value)
                {
                    _categorieid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretachizitie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pretachizitie
        {
            get { return _pretachizitie; }
            set
            {
                if (_pretachizitie != value)
                {
                    _pretachizitie = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretvanzare", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pretvanzare
        {
            get { return _pretvanzare; }
            set
            {
                if (_pretvanzare != value)
                {
                    _pretvanzare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("stoc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Stoc
        {
            get { return _stoc; }
            set
            {
                if (_stoc != value)
                {
                    _stoc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("gestiunea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Gestiunea
        {
            get { return _gestiunea; }
            set
            {
                if (_gestiunea != value)
                {
                    _gestiunea = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Furnizor : System.ComponentModel.INotifyPropertyChanged
    {
        private string _idfurnizor;
        private string _denumire;
        private string _codfiscal;
        private string _nrregcom;
        private string _tara;
        private string _judet;
        private string _adresa;
    
        [Newtonsoft.Json.JsonProperty("idfurnizor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Idfurnizor
        {
            get { return _idfurnizor; }
            set
            {
                if (_idfurnizor != value)
                {
                    _idfurnizor = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("denumire", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Denumire
        {
            get { return _denumire; }
            set
            {
                if (_denumire != value)
                {
                    _denumire = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("codfiscal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Codfiscal
        {
            get { return _codfiscal; }
            set
            {
                if (_codfiscal != value)
                {
                    _codfiscal = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("nrregcom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nrregcom
        {
            get { return _nrregcom; }
            set
            {
                if (_nrregcom != value)
                {
                    _nrregcom = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tara", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tara
        {
            get { return _tara; }
            set
            {
                if (_tara != value)
                {
                    _tara = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("judet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Judet
        {
            get { return _judet; }
            set
            {
                if (_judet != value)
                {
                    _judet = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("adresa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Adresa
        {
            get { return _adresa; }
            set
            {
                if (_adresa != value)
                {
                    _adresa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class F_CASEMARCAT : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _numecasa;
        private string _modelcasa;
        private string _formatden;
        private string _dirbonuri;
        private string _tipfac;
        private string _filtrugr;
        private string _tipdisp;
        private string _htxtbold;
        private string _htxtreg;
        private string _mtxttipbon;
        private string _ftxtreg;
        private string _seriefisc;
        private bool _dispcomb;
        private bool _listbf;
        private bool _listnp;
        private bool _listcb;
        private bool _isdifctva;
        private bool _isdissep;
        private string _pdv;
        private int _dimbon;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("numecasa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Numecasa
        {
            get { return _numecasa; }
            set
            {
                if (_numecasa != value)
                {
                    _numecasa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("modelcasa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Modelcasa
        {
            get { return _modelcasa; }
            set
            {
                if (_modelcasa != value)
                {
                    _modelcasa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("formatden", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Formatden
        {
            get { return _formatden; }
            set
            {
                if (_formatden != value)
                {
                    _formatden = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("dirbonuri", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Dirbonuri
        {
            get { return _dirbonuri; }
            set
            {
                if (_dirbonuri != value)
                {
                    _dirbonuri = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tipfac", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tipfac
        {
            get { return _tipfac; }
            set
            {
                if (_tipfac != value)
                {
                    _tipfac = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("filtrugr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Filtrugr
        {
            get { return _filtrugr; }
            set
            {
                if (_filtrugr != value)
                {
                    _filtrugr = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tipdisp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tipdisp
        {
            get { return _tipdisp; }
            set
            {
                if (_tipdisp != value)
                {
                    _tipdisp = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("htxtbold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Htxtbold
        {
            get { return _htxtbold; }
            set
            {
                if (_htxtbold != value)
                {
                    _htxtbold = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("htxtreg", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Htxtreg
        {
            get { return _htxtreg; }
            set
            {
                if (_htxtreg != value)
                {
                    _htxtreg = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("mtxttipbon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Mtxttipbon
        {
            get { return _mtxttipbon; }
            set
            {
                if (_mtxttipbon != value)
                {
                    _mtxttipbon = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ftxtreg", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Ftxtreg
        {
            get { return _ftxtreg; }
            set
            {
                if (_ftxtreg != value)
                {
                    _ftxtreg = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("seriefisc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Seriefisc
        {
            get { return _seriefisc; }
            set
            {
                if (_seriefisc != value)
                {
                    _seriefisc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("dispcomb", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Dispcomb
        {
            get { return _dispcomb; }
            set
            {
                if (_dispcomb != value)
                {
                    _dispcomb = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("listbf", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Listbf
        {
            get { return _listbf; }
            set
            {
                if (_listbf != value)
                {
                    _listbf = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("listnp", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Listnp
        {
            get { return _listnp; }
            set
            {
                if (_listnp != value)
                {
                    _listnp = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("listcb", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Listcb
        {
            get { return _listcb; }
            set
            {
                if (_listcb != value)
                {
                    _listcb = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isdifctva", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Isdifctva
        {
            get { return _isdifctva; }
            set
            {
                if (_isdifctva != value)
                {
                    _isdifctva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isdissep", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Isdissep
        {
            get { return _isdissep; }
            set
            {
                if (_isdissep != value)
                {
                    _isdissep = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pdv", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Pdv
        {
            get { return _pdv; }
            set
            {
                if (_pdv != value)
                {
                    _pdv = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("dimbon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Dimbon
        {
            get { return _dimbon; }
            set
            {
                if (_dimbon != value)
                {
                    _dimbon = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class F_CASEMCHTVA : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _tipcasa;
        private double _ctva;
        private string _chtva;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tipcasa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tipcasa
        {
            get { return _tipcasa; }
            set
            {
                if (_tipcasa != value)
                {
                    _tipcasa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ctva", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Ctva
        {
            get { return _ctva; }
            set
            {
                if (_ctva != value)
                {
                    _ctva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("chtva", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Chtva
        {
            get { return _chtva; }
            set
            {
                if (_chtva != value)
                {
                    _chtva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class F_CASEMDEPART : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _tipcasa;
        private string _grupa;
        private string _chdep;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tipcasa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tipcasa
        {
            get { return _tipcasa; }
            set
            {
                if (_tipcasa != value)
                {
                    _tipcasa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("grupa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Grupa
        {
            get { return _grupa; }
            set
            {
                if (_grupa != value)
                {
                    _grupa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("chdep", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Chdep
        {
            get { return _chdep; }
            set
            {
                if (_chdep != value)
                {
                    _chdep = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class F_CASEMGRUPEART : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _tipcasa;
        private string _grupa;
        private string _chgrupa;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tipcasa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tipcasa
        {
            get { return _tipcasa; }
            set
            {
                if (_tipcasa != value)
                {
                    _tipcasa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("grupa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Grupa
        {
            get { return _grupa; }
            set
            {
                if (_grupa != value)
                {
                    _grupa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("chgrupa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Chgrupa
        {
            get { return _chgrupa; }
            set
            {
                if (_chgrupa != value)
                {
                    _chgrupa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class F_CASEMMODINCAS : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _tipcasa;
        private string _tipin;
        private string _chin;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tipcasa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tipcasa
        {
            get { return _tipcasa; }
            set
            {
                if (_tipcasa != value)
                {
                    _tipcasa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tipin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tipin
        {
            get { return _tipin; }
            set
            {
                if (_tipin != value)
                {
                    _tipin = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("chin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Chin
        {
            get { return _chin; }
            set
            {
                if (_chin != value)
                {
                    _chin = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComandaStatusDTO : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private System.DateTimeOffset? _datastartprep;
        private System.DateTimeOffset? _datastopprep;
        private string _statuseb;
        private double _timpprep;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("datastartprep", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datastartprep
        {
            get { return _datastartprep; }
            set
            {
                if (_datastartprep != value)
                {
                    _datastartprep = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("datastopprep", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datastopprep
        {
            get { return _datastopprep; }
            set
            {
                if (_datastopprep != value)
                {
                    _datastopprep = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("statuseb", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Statuseb
        {
            get { return _statuseb; }
            set
            {
                if (_statuseb != value)
                {
                    _statuseb = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("timpprep", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Timpprep
        {
            get { return _timpprep; }
            set
            {
                if (_timpprep != value)
                {
                    _timpprep = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class LinieRaspunsFeedback : System.ComponentModel.INotifyPropertyChanged
    {
        private string _identifFeedback;
        private string _identifIntrebare;
        private int _punctaj;
    
        [Newtonsoft.Json.JsonProperty("identifFeedback", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IdentifFeedback
        {
            get { return _identifFeedback; }
            set
            {
                if (_identifFeedback != value)
                {
                    _identifFeedback = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("identifIntrebare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IdentifIntrebare
        {
            get { return _identifIntrebare; }
            set
            {
                if (_identifIntrebare != value)
                {
                    _identifIntrebare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("punctaj", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Punctaj
        {
            get { return _punctaj; }
            set
            {
                if (_punctaj != value)
                {
                    _punctaj = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RaspunsFeedback : System.ComponentModel.INotifyPropertyChanged
    {
        private System.DateTimeOffset _dataFeedback;
        private string _punctDeLucru;
        private string _utilizator;
        private string _idDocument;
        private System.Collections.Generic.ICollection<LinieRaspunsFeedback> _raspunsuriFeedback;
        private double _punctajMediu;
    
        [Newtonsoft.Json.JsonProperty("dataFeedback", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset DataFeedback
        {
            get { return _dataFeedback; }
            set
            {
                if (_dataFeedback != value)
                {
                    _dataFeedback = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("punctDeLucru", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PunctDeLucru
        {
            get { return _punctDeLucru; }
            set
            {
                if (_punctDeLucru != value)
                {
                    _punctDeLucru = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("utilizator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Utilizator
        {
            get { return _utilizator; }
            set
            {
                if (_utilizator != value)
                {
                    _utilizator = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("idDocument", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IdDocument
        {
            get { return _idDocument; }
            set
            {
                if (_idDocument != value)
                {
                    _idDocument = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("raspunsuriFeedback", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LinieRaspunsFeedback> RaspunsuriFeedback
        {
            get { return _raspunsuriFeedback; }
            set
            {
                if (_raspunsuriFeedback != value)
                {
                    _raspunsuriFeedback = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("punctajMediu", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double PunctajMediu
        {
            get { return _punctajMediu; }
            set
            {
                if (_punctajMediu != value)
                {
                    _punctajMediu = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class DetaliiInventar : System.ComponentModel.INotifyPropertyChanged
    {
        private string _idInvDetaliu;
        private int _nrOrdine;
        private string _inventarId;
        private string _idArticol;
        private string _denumire;
        private string _codBare;
        private double _pretAchizitie;
        private double _pretVanzare;
        private double _stocScriptic;
        private double _stocFaptic;
        private double _diferenta;
    
        [Newtonsoft.Json.JsonProperty("idInvDetaliu", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IdInvDetaliu
        {
            get { return _idInvDetaliu; }
            set
            {
                if (_idInvDetaliu != value)
                {
                    _idInvDetaliu = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("nrOrdine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NrOrdine
        {
            get { return _nrOrdine; }
            set
            {
                if (_nrOrdine != value)
                {
                    _nrOrdine = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("inventarId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string InventarId
        {
            get { return _inventarId; }
            set
            {
                if (_inventarId != value)
                {
                    _inventarId = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("idArticol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IdArticol
        {
            get { return _idArticol; }
            set
            {
                if (_idArticol != value)
                {
                    _idArticol = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("denumire", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Denumire
        {
            get { return _denumire; }
            set
            {
                if (_denumire != value)
                {
                    _denumire = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("codBare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CodBare
        {
            get { return _codBare; }
            set
            {
                if (_codBare != value)
                {
                    _codBare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretAchizitie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double PretAchizitie
        {
            get { return _pretAchizitie; }
            set
            {
                if (_pretAchizitie != value)
                {
                    _pretAchizitie = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretVanzare", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double PretVanzare
        {
            get { return _pretVanzare; }
            set
            {
                if (_pretVanzare != value)
                {
                    _pretVanzare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("stocScriptic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StocScriptic
        {
            get { return _stocScriptic; }
            set
            {
                if (_stocScriptic != value)
                {
                    _stocScriptic = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("stocFaptic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double StocFaptic
        {
            get { return _stocFaptic; }
            set
            {
                if (_stocFaptic != value)
                {
                    _stocFaptic = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("diferenta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Diferenta
        {
            get { return _diferenta; }
            set
            {
                if (_diferenta != value)
                {
                    _diferenta = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class InventarExport : System.ComponentModel.INotifyPropertyChanged
    {
        private string _idinventar;
        private System.DateTimeOffset _datainventar;
        private System.DateTimeOffset _ultimamodificare;
        private string _operator;
        private string _gestiune;
        private bool _stare;
        private System.Collections.Generic.ICollection<DetaliiInventar> _inventardetalii;
    
        [Newtonsoft.Json.JsonProperty("idinventar", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Idinventar
        {
            get { return _idinventar; }
            set
            {
                if (_idinventar != value)
                {
                    _idinventar = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("datainventar", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Datainventar
        {
            get { return _datainventar; }
            set
            {
                if (_datainventar != value)
                {
                    _datainventar = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ultimamodificare", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Ultimamodificare
        {
            get { return _ultimamodificare; }
            set
            {
                if (_ultimamodificare != value)
                {
                    _ultimamodificare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("operator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Operator
        {
            get { return _operator; }
            set
            {
                if (_operator != value)
                {
                    _operator = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("gestiune", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Gestiune
        {
            get { return _gestiune; }
            set
            {
                if (_gestiune != value)
                {
                    _gestiune = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("stare", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Stare
        {
            get { return _stare; }
            set
            {
                if (_stare != value)
                {
                    _stare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("inventardetalii", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<DetaliiInventar> Inventardetalii
        {
            get { return _inventardetalii; }
            set
            {
                if (_inventardetalii != value)
                {
                    _inventardetalii = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class DetaliiReceptie : System.ComponentModel.INotifyPropertyChanged
    {
        private string _idReceptieDetaliu;
        private int _nrOrdine;
        private string _receptieId;
        private string _idArticol;
        private string _denumire;
        private string _codBare;
        private double _pretAchizitie;
        private double _pretVanzare;
        private double _cantitateReceptionata;
    
        [Newtonsoft.Json.JsonProperty("idReceptieDetaliu", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IdReceptieDetaliu
        {
            get { return _idReceptieDetaliu; }
            set
            {
                if (_idReceptieDetaliu != value)
                {
                    _idReceptieDetaliu = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("nrOrdine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NrOrdine
        {
            get { return _nrOrdine; }
            set
            {
                if (_nrOrdine != value)
                {
                    _nrOrdine = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("receptieId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ReceptieId
        {
            get { return _receptieId; }
            set
            {
                if (_receptieId != value)
                {
                    _receptieId = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("idArticol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IdArticol
        {
            get { return _idArticol; }
            set
            {
                if (_idArticol != value)
                {
                    _idArticol = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("denumire", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Denumire
        {
            get { return _denumire; }
            set
            {
                if (_denumire != value)
                {
                    _denumire = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("codBare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CodBare
        {
            get { return _codBare; }
            set
            {
                if (_codBare != value)
                {
                    _codBare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretAchizitie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double PretAchizitie
        {
            get { return _pretAchizitie; }
            set
            {
                if (_pretAchizitie != value)
                {
                    _pretAchizitie = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretVanzare", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double PretVanzare
        {
            get { return _pretVanzare; }
            set
            {
                if (_pretVanzare != value)
                {
                    _pretVanzare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("cantitateReceptionata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double CantitateReceptionata
        {
            get { return _cantitateReceptionata; }
            set
            {
                if (_cantitateReceptionata != value)
                {
                    _cantitateReceptionata = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ReceptieMarfaExport : System.ComponentModel.INotifyPropertyChanged
    {
        private string _idreceptie;
        private System.DateTimeOffset _datareceptie;
        private System.DateTimeOffset _datafactura;
        private string _factura;
        private string _furnizor;
        private string _operator;
        private string _gestiune;
        private System.Collections.Generic.ICollection<DetaliiReceptie> _receptiedetalii;
    
        [Newtonsoft.Json.JsonProperty("idreceptie", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Idreceptie
        {
            get { return _idreceptie; }
            set
            {
                if (_idreceptie != value)
                {
                    _idreceptie = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("datareceptie", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Datareceptie
        {
            get { return _datareceptie; }
            set
            {
                if (_datareceptie != value)
                {
                    _datareceptie = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("datafactura", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset Datafactura
        {
            get { return _datafactura; }
            set
            {
                if (_datafactura != value)
                {
                    _datafactura = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("factura", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Factura
        {
            get { return _factura; }
            set
            {
                if (_factura != value)
                {
                    _factura = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("furnizor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Furnizor
        {
            get { return _furnizor; }
            set
            {
                if (_furnizor != value)
                {
                    _furnizor = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("operator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Operator
        {
            get { return _operator; }
            set
            {
                if (_operator != value)
                {
                    _operator = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("gestiune", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Gestiune
        {
            get { return _gestiune; }
            set
            {
                if (_gestiune != value)
                {
                    _gestiune = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("receptiedetalii", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<DetaliiReceptie> Receptiedetalii
        {
            get { return _receptiedetalii; }
            set
            {
                if (_receptiedetalii != value)
                {
                    _receptiedetalii = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RS_OSPATARI : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _ospatar;
        private string _codacces;
        private string _codospatar;
        private bool _activ;
        private bool _intura;
        private bool _a_SEFSALA;
        private bool _a_INCASARENU;
        private bool _a_TRIMITECNU;
        private bool _a_VALIDARE;
        private bool _a_DISCOUNT;
        private bool _a_STORNARE;
        private bool _a_IMPARTEC;
        private bool _a_MODIFINCAS;
        private bool _a_PROTOCOL;
        private bool _a_PERISAJ;
        private bool _a_TRANSFER;
        private bool _a_INCASINCONT;
        private bool _a_INCARCCONT;
        private bool _a_INCASCUPUNCTEFID;
        private bool _a_INCASCEC;
        private bool _a_INCASTICHETCADOU;
        private bool _a_INCASVALUTA;
        private bool _a_INCASCUSTOM;
        private bool _a_INCASAVANS;
        private bool _a_INCASNPINCHIDERE;
        private bool _a_INCASNPVERIF;
        private bool _a_ADDCLIENT;
        private bool _a_MODIFCLIENT;
        private bool _a_INCASCAMERE;
        private bool _a_NUMARCAPROD;
        private bool _a_NUCOMENZIWEB;
        private bool _a_NUCOMENZITEL;
        private string _turA_ID;
        private string _zI_ID;
        private string _pdV_ID;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ospatar", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Ospatar
        {
            get { return _ospatar; }
            set
            {
                if (_ospatar != value)
                {
                    _ospatar = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("codacces", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Codacces
        {
            get { return _codacces; }
            set
            {
                if (_codacces != value)
                {
                    _codacces = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("codospatar", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Codospatar
        {
            get { return _codospatar; }
            set
            {
                if (_codospatar != value)
                {
                    _codospatar = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("activ", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Activ
        {
            get { return _activ; }
            set
            {
                if (_activ != value)
                {
                    _activ = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("intura", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Intura
        {
            get { return _intura; }
            set
            {
                if (_intura != value)
                {
                    _intura = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_SEFSALA", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_SEFSALA
        {
            get { return _a_SEFSALA; }
            set
            {
                if (_a_SEFSALA != value)
                {
                    _a_SEFSALA = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASARENU", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASARENU
        {
            get { return _a_INCASARENU; }
            set
            {
                if (_a_INCASARENU != value)
                {
                    _a_INCASARENU = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_TRIMITECNU", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_TRIMITECNU
        {
            get { return _a_TRIMITECNU; }
            set
            {
                if (_a_TRIMITECNU != value)
                {
                    _a_TRIMITECNU = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_VALIDARE", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_VALIDARE
        {
            get { return _a_VALIDARE; }
            set
            {
                if (_a_VALIDARE != value)
                {
                    _a_VALIDARE = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_DISCOUNT", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_DISCOUNT
        {
            get { return _a_DISCOUNT; }
            set
            {
                if (_a_DISCOUNT != value)
                {
                    _a_DISCOUNT = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_STORNARE", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_STORNARE
        {
            get { return _a_STORNARE; }
            set
            {
                if (_a_STORNARE != value)
                {
                    _a_STORNARE = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_IMPARTEC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_IMPARTEC
        {
            get { return _a_IMPARTEC; }
            set
            {
                if (_a_IMPARTEC != value)
                {
                    _a_IMPARTEC = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_MODIFINCAS", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_MODIFINCAS
        {
            get { return _a_MODIFINCAS; }
            set
            {
                if (_a_MODIFINCAS != value)
                {
                    _a_MODIFINCAS = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_PROTOCOL", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_PROTOCOL
        {
            get { return _a_PROTOCOL; }
            set
            {
                if (_a_PROTOCOL != value)
                {
                    _a_PROTOCOL = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_PERISAJ", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_PERISAJ
        {
            get { return _a_PERISAJ; }
            set
            {
                if (_a_PERISAJ != value)
                {
                    _a_PERISAJ = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_TRANSFER", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_TRANSFER
        {
            get { return _a_TRANSFER; }
            set
            {
                if (_a_TRANSFER != value)
                {
                    _a_TRANSFER = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASINCONT", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASINCONT
        {
            get { return _a_INCASINCONT; }
            set
            {
                if (_a_INCASINCONT != value)
                {
                    _a_INCASINCONT = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCARCCONT", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCARCCONT
        {
            get { return _a_INCARCCONT; }
            set
            {
                if (_a_INCARCCONT != value)
                {
                    _a_INCARCCONT = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASCUPUNCTEFID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASCUPUNCTEFID
        {
            get { return _a_INCASCUPUNCTEFID; }
            set
            {
                if (_a_INCASCUPUNCTEFID != value)
                {
                    _a_INCASCUPUNCTEFID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASCEC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASCEC
        {
            get { return _a_INCASCEC; }
            set
            {
                if (_a_INCASCEC != value)
                {
                    _a_INCASCEC = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASTICHETCADOU", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASTICHETCADOU
        {
            get { return _a_INCASTICHETCADOU; }
            set
            {
                if (_a_INCASTICHETCADOU != value)
                {
                    _a_INCASTICHETCADOU = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASVALUTA", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASVALUTA
        {
            get { return _a_INCASVALUTA; }
            set
            {
                if (_a_INCASVALUTA != value)
                {
                    _a_INCASVALUTA = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASCUSTOM", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASCUSTOM
        {
            get { return _a_INCASCUSTOM; }
            set
            {
                if (_a_INCASCUSTOM != value)
                {
                    _a_INCASCUSTOM = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASAVANS", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASAVANS
        {
            get { return _a_INCASAVANS; }
            set
            {
                if (_a_INCASAVANS != value)
                {
                    _a_INCASAVANS = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASNPINCHIDERE", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASNPINCHIDERE
        {
            get { return _a_INCASNPINCHIDERE; }
            set
            {
                if (_a_INCASNPINCHIDERE != value)
                {
                    _a_INCASNPINCHIDERE = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASNPVERIF", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASNPVERIF
        {
            get { return _a_INCASNPVERIF; }
            set
            {
                if (_a_INCASNPVERIF != value)
                {
                    _a_INCASNPVERIF = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_ADDCLIENT", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_ADDCLIENT
        {
            get { return _a_ADDCLIENT; }
            set
            {
                if (_a_ADDCLIENT != value)
                {
                    _a_ADDCLIENT = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_MODIFCLIENT", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_MODIFCLIENT
        {
            get { return _a_MODIFCLIENT; }
            set
            {
                if (_a_MODIFCLIENT != value)
                {
                    _a_MODIFCLIENT = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_INCASCAMERE", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_INCASCAMERE
        {
            get { return _a_INCASCAMERE; }
            set
            {
                if (_a_INCASCAMERE != value)
                {
                    _a_INCASCAMERE = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_NUMARCAPROD", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_NUMARCAPROD
        {
            get { return _a_NUMARCAPROD; }
            set
            {
                if (_a_NUMARCAPROD != value)
                {
                    _a_NUMARCAPROD = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_NUCOMENZIWEB", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_NUCOMENZIWEB
        {
            get { return _a_NUCOMENZIWEB; }
            set
            {
                if (_a_NUCOMENZIWEB != value)
                {
                    _a_NUCOMENZIWEB = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("a_NUCOMENZITEL", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool A_NUCOMENZITEL
        {
            get { return _a_NUCOMENZITEL; }
            set
            {
                if (_a_NUCOMENZITEL != value)
                {
                    _a_NUCOMENZITEL = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("turA_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TurA_ID
        {
            get { return _turA_ID; }
            set
            {
                if (_turA_ID != value)
                {
                    _turA_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("zI_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ZI_ID
        {
            get { return _zI_ID; }
            set
            {
                if (_zI_ID != value)
                {
                    _zI_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pdV_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PdV_ID
        {
            get { return _pdV_ID; }
            set
            {
                if (_pdV_ID != value)
                {
                    _pdV_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RS_SALI : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _numesala;
        private int _nrordine;
        private string _pdV_ID;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("numesala", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Numesala
        {
            get { return _numesala; }
            set
            {
                if (_numesala != value)
                {
                    _numesala = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("nrordine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Nrordine
        {
            get { return _nrordine; }
            set
            {
                if (_nrordine != value)
                {
                    _nrordine = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pdV_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PdV_ID
        {
            get { return _pdV_ID; }
            set
            {
                if (_pdV_ID != value)
                {
                    _pdV_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class F_ARTGRUPE : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _grupa;
        private string _grupaimg;
        private string _urlgrupaimg;
        private int? _ordine;
        private int _ismeniuv;
        private int _ismeniuss;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("grupa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Grupa
        {
            get { return _grupa; }
            set
            {
                if (_grupa != value)
                {
                    _grupa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("grupaimg", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Grupaimg
        {
            get { return _grupaimg; }
            set
            {
                if (_grupaimg != value)
                {
                    _grupaimg = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("urlgrupaimg", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urlgrupaimg
        {
            get { return _urlgrupaimg; }
            set
            {
                if (_urlgrupaimg != value)
                {
                    _urlgrupaimg = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ordine", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Ordine
        {
            get { return _ordine; }
            set
            {
                if (_ordine != value)
                {
                    _ordine = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ismeniuv", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Ismeniuv
        {
            get { return _ismeniuv; }
            set
            {
                if (_ismeniuv != value)
                {
                    _ismeniuv = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ismeniuss", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Ismeniuss
        {
            get { return _ismeniuss; }
            set
            {
                if (_ismeniuss != value)
                {
                    _ismeniuss = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class F_ARTSUBGRUPE : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _grupaid;
        private string _subgrupa;
        private string _subgrupaimg;
        private string _urlsubgrupaimg;
        private int? _ordine;
        private int _inactiva;
        private int _ismeniuv;
        private int _ismeniuss;
        private System.DateTimeOffset? _lastmodif;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("grupaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Grupaid
        {
            get { return _grupaid; }
            set
            {
                if (_grupaid != value)
                {
                    _grupaid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("subgrupa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Subgrupa
        {
            get { return _subgrupa; }
            set
            {
                if (_subgrupa != value)
                {
                    _subgrupa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("subgrupaimg", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Subgrupaimg
        {
            get { return _subgrupaimg; }
            set
            {
                if (_subgrupaimg != value)
                {
                    _subgrupaimg = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("urlsubgrupaimg", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Urlsubgrupaimg
        {
            get { return _urlsubgrupaimg; }
            set
            {
                if (_urlsubgrupaimg != value)
                {
                    _urlsubgrupaimg = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ordine", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Ordine
        {
            get { return _ordine; }
            set
            {
                if (_ordine != value)
                {
                    _ordine = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("inactiva", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Inactiva
        {
            get { return _inactiva; }
            set
            {
                if (_inactiva != value)
                {
                    _inactiva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ismeniuv", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Ismeniuv
        {
            get { return _ismeniuv; }
            set
            {
                if (_ismeniuv != value)
                {
                    _ismeniuv = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ismeniuss", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Ismeniuss
        {
            get { return _ismeniuss; }
            set
            {
                if (_ismeniuss != value)
                {
                    _ismeniuss = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("lastmodif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastmodif
        {
            get { return _lastmodif; }
            set
            {
                if (_lastmodif != value)
                {
                    _lastmodif = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class POS_COMENZI : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private int _docgenid;
        private string _nrcomanda;
        private string _tipcomandA_ID;
        private System.DateTimeOffset? _datac;
        private System.DateTimeOffset? _dataoutc;
        private string _partenerc;
        private string _cfbon;
        private string _infocomanda;
        private string _masA_ID;
        private string _masa;
        private string _useR_ID;
        private string _agent;
        private double _valcomanda;
        private double _valbacsis;
        private double _vachitat;
        private double _vachcard;
        private double _vachtichm;
        private double _vtichcadou;
        private double _vachitatcont;
        private double _vachcec;
        private double _vachitatpuncte;
        private double _vachprotocol;
        private double _vachperisaj;
        private double _vachvaluta;
        private double _vachvalutamon;
        private string _valutamon;
        private double _valutacurs;
        private double _vachcustom;
        private double _vtemporara;
        private double _vavans;
        private double _vachcash;
        private int _incarccont;
        private string _statusc;
        private string _ospataR_ID;
        private string _ospatar;
        private int _trimisabc;
        private int _protocol;
        private int _perisaj;
        private string _observatii;
        private int _lalivrare;
        private string _infolivrare;
        private string _turA_ID;
        private string _zI_ID;
        private int _validata;
        private int _bonerr;
        private string _clienT_ID;
        private string _client;
        private int _livraretrimisa;
        private string _livrareadresa;
        private System.DateTimeOffset? _livrarestart;
        private int _livrata;
        private System.DateTimeOffset? _livrarestop;
        private string _livrarestoprec;
        private double _timpinlucru;
        private double _timplivrare;
        private double _timptotal;
        private System.DateTimeOffset? _datastartprep;
        private System.DateTimeOffset? _datastopprep;
        private string _statuseb;
        private double _timpprep;
        private int _sincronizata;
        private string _sesiune;
        private System.DateTimeOffset? _lastsync;
        private int _finalizata;
        private string _pdV_ID;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("docgenid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Docgenid
        {
            get { return _docgenid; }
            set
            {
                if (_docgenid != value)
                {
                    _docgenid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("nrcomanda", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nrcomanda
        {
            get { return _nrcomanda; }
            set
            {
                if (_nrcomanda != value)
                {
                    _nrcomanda = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tipcomandA_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TipcomandA_ID
        {
            get { return _tipcomandA_ID; }
            set
            {
                if (_tipcomandA_ID != value)
                {
                    _tipcomandA_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("datac", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datac
        {
            get { return _datac; }
            set
            {
                if (_datac != value)
                {
                    _datac = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("dataoutc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Dataoutc
        {
            get { return _dataoutc; }
            set
            {
                if (_dataoutc != value)
                {
                    _dataoutc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("partenerc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Partenerc
        {
            get { return _partenerc; }
            set
            {
                if (_partenerc != value)
                {
                    _partenerc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("cfbon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Cfbon
        {
            get { return _cfbon; }
            set
            {
                if (_cfbon != value)
                {
                    _cfbon = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("infocomanda", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Infocomanda
        {
            get { return _infocomanda; }
            set
            {
                if (_infocomanda != value)
                {
                    _infocomanda = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("masA_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MasA_ID
        {
            get { return _masA_ID; }
            set
            {
                if (_masA_ID != value)
                {
                    _masA_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("masa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Masa
        {
            get { return _masa; }
            set
            {
                if (_masa != value)
                {
                    _masa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("useR_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UseR_ID
        {
            get { return _useR_ID; }
            set
            {
                if (_useR_ID != value)
                {
                    _useR_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("agent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Agent
        {
            get { return _agent; }
            set
            {
                if (_agent != value)
                {
                    _agent = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("valcomanda", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Valcomanda
        {
            get { return _valcomanda; }
            set
            {
                if (_valcomanda != value)
                {
                    _valcomanda = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("valbacsis", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Valbacsis
        {
            get { return _valbacsis; }
            set
            {
                if (_valbacsis != value)
                {
                    _valbacsis = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachitat", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachitat
        {
            get { return _vachitat; }
            set
            {
                if (_vachitat != value)
                {
                    _vachitat = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachcard", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachcard
        {
            get { return _vachcard; }
            set
            {
                if (_vachcard != value)
                {
                    _vachcard = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachtichm", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachtichm
        {
            get { return _vachtichm; }
            set
            {
                if (_vachtichm != value)
                {
                    _vachtichm = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vtichcadou", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vtichcadou
        {
            get { return _vtichcadou; }
            set
            {
                if (_vtichcadou != value)
                {
                    _vtichcadou = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachitatcont", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachitatcont
        {
            get { return _vachitatcont; }
            set
            {
                if (_vachitatcont != value)
                {
                    _vachitatcont = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachcec", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachcec
        {
            get { return _vachcec; }
            set
            {
                if (_vachcec != value)
                {
                    _vachcec = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachitatpuncte", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachitatpuncte
        {
            get { return _vachitatpuncte; }
            set
            {
                if (_vachitatpuncte != value)
                {
                    _vachitatpuncte = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachprotocol", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachprotocol
        {
            get { return _vachprotocol; }
            set
            {
                if (_vachprotocol != value)
                {
                    _vachprotocol = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachperisaj", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachperisaj
        {
            get { return _vachperisaj; }
            set
            {
                if (_vachperisaj != value)
                {
                    _vachperisaj = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachvaluta", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachvaluta
        {
            get { return _vachvaluta; }
            set
            {
                if (_vachvaluta != value)
                {
                    _vachvaluta = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachvalutamon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachvalutamon
        {
            get { return _vachvalutamon; }
            set
            {
                if (_vachvalutamon != value)
                {
                    _vachvalutamon = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("valutamon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Valutamon
        {
            get { return _valutamon; }
            set
            {
                if (_valutamon != value)
                {
                    _valutamon = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("valutacurs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Valutacurs
        {
            get { return _valutacurs; }
            set
            {
                if (_valutacurs != value)
                {
                    _valutacurs = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachcustom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachcustom
        {
            get { return _vachcustom; }
            set
            {
                if (_vachcustom != value)
                {
                    _vachcustom = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vtemporara", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vtemporara
        {
            get { return _vtemporara; }
            set
            {
                if (_vtemporara != value)
                {
                    _vtemporara = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vavans", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vavans
        {
            get { return _vavans; }
            set
            {
                if (_vavans != value)
                {
                    _vavans = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("vachcash", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Vachcash
        {
            get { return _vachcash; }
            set
            {
                if (_vachcash != value)
                {
                    _vachcash = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("incarccont", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Incarccont
        {
            get { return _incarccont; }
            set
            {
                if (_incarccont != value)
                {
                    _incarccont = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("statusc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Statusc
        {
            get { return _statusc; }
            set
            {
                if (_statusc != value)
                {
                    _statusc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ospataR_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OspataR_ID
        {
            get { return _ospataR_ID; }
            set
            {
                if (_ospataR_ID != value)
                {
                    _ospataR_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ospatar", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Ospatar
        {
            get { return _ospatar; }
            set
            {
                if (_ospatar != value)
                {
                    _ospatar = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("trimisabc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Trimisabc
        {
            get { return _trimisabc; }
            set
            {
                if (_trimisabc != value)
                {
                    _trimisabc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("protocol", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Protocol
        {
            get { return _protocol; }
            set
            {
                if (_protocol != value)
                {
                    _protocol = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("perisaj", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Perisaj
        {
            get { return _perisaj; }
            set
            {
                if (_perisaj != value)
                {
                    _perisaj = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("observatii", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Observatii
        {
            get { return _observatii; }
            set
            {
                if (_observatii != value)
                {
                    _observatii = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("lalivrare", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Lalivrare
        {
            get { return _lalivrare; }
            set
            {
                if (_lalivrare != value)
                {
                    _lalivrare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("infolivrare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Infolivrare
        {
            get { return _infolivrare; }
            set
            {
                if (_infolivrare != value)
                {
                    _infolivrare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("turA_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TurA_ID
        {
            get { return _turA_ID; }
            set
            {
                if (_turA_ID != value)
                {
                    _turA_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("zI_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ZI_ID
        {
            get { return _zI_ID; }
            set
            {
                if (_zI_ID != value)
                {
                    _zI_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("validata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Validata
        {
            get { return _validata; }
            set
            {
                if (_validata != value)
                {
                    _validata = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("bonerr", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Bonerr
        {
            get { return _bonerr; }
            set
            {
                if (_bonerr != value)
                {
                    _bonerr = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("clienT_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ClienT_ID
        {
            get { return _clienT_ID; }
            set
            {
                if (_clienT_ID != value)
                {
                    _clienT_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("client", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Client
        {
            get { return _client; }
            set
            {
                if (_client != value)
                {
                    _client = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("livraretrimisa", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Livraretrimisa
        {
            get { return _livraretrimisa; }
            set
            {
                if (_livraretrimisa != value)
                {
                    _livraretrimisa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("livrareadresa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Livrareadresa
        {
            get { return _livrareadresa; }
            set
            {
                if (_livrareadresa != value)
                {
                    _livrareadresa = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("livrarestart", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Livrarestart
        {
            get { return _livrarestart; }
            set
            {
                if (_livrarestart != value)
                {
                    _livrarestart = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("livrata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Livrata
        {
            get { return _livrata; }
            set
            {
                if (_livrata != value)
                {
                    _livrata = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("livrarestop", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Livrarestop
        {
            get { return _livrarestop; }
            set
            {
                if (_livrarestop != value)
                {
                    _livrarestop = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("livrarestoprec", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Livrarestoprec
        {
            get { return _livrarestoprec; }
            set
            {
                if (_livrarestoprec != value)
                {
                    _livrarestoprec = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("timpinlucru", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Timpinlucru
        {
            get { return _timpinlucru; }
            set
            {
                if (_timpinlucru != value)
                {
                    _timpinlucru = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("timplivrare", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Timplivrare
        {
            get { return _timplivrare; }
            set
            {
                if (_timplivrare != value)
                {
                    _timplivrare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("timptotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Timptotal
        {
            get { return _timptotal; }
            set
            {
                if (_timptotal != value)
                {
                    _timptotal = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("datastartprep", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datastartprep
        {
            get { return _datastartprep; }
            set
            {
                if (_datastartprep != value)
                {
                    _datastartprep = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("datastopprep", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datastopprep
        {
            get { return _datastopprep; }
            set
            {
                if (_datastopprep != value)
                {
                    _datastopprep = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("statuseb", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Statuseb
        {
            get { return _statuseb; }
            set
            {
                if (_statuseb != value)
                {
                    _statuseb = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("timpprep", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Timpprep
        {
            get { return _timpprep; }
            set
            {
                if (_timpprep != value)
                {
                    _timpprep = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("sincronizata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Sincronizata
        {
            get { return _sincronizata; }
            set
            {
                if (_sincronizata != value)
                {
                    _sincronizata = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("sesiune", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Sesiune
        {
            get { return _sesiune; }
            set
            {
                if (_sesiune != value)
                {
                    _sesiune = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("lastsync", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsync
        {
            get { return _lastsync; }
            set
            {
                if (_lastsync != value)
                {
                    _lastsync = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("finalizata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Finalizata
        {
            get { return _finalizata; }
            set
            {
                if (_finalizata != value)
                {
                    _finalizata = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pdV_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PdV_ID
        {
            get { return _pdV_ID; }
            set
            {
                if (_pdV_ID != value)
                {
                    _pdV_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class POS_COMENZIDET : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private int _nrordine;
        private int _docgenid;
        private string _comandA_ID;
        private System.DateTimeOffset? _datac;
        private int _artid;
        private double _pretdefc;
        private double _cantc;
        private double _pretc;
        private double _ctvac;
        private string _tiptva;
        private double _rabatc;
        private int _isdiscv;
        private double _discountv;
        private string _retetA_ID;
        private string _gestouT_ID;
        private int _descarcat;
        private string _indicatii;
        private int _trimisc;
        private int _isgroup;
        private int _issplit;
        private int _isreturtot;
        private int _isbacsis;
        private string _felnr;
        private string _oldrguid;
        private string _mZ_RGUID;
        private int _nurecalcpret;
        private string _ospataR_ID;
        private string _sefsalA_ID;
        private string _turA_ID;
        private string _promotie;
        private string _returid;
        private string _sesiune;
        private int _sincronizata;
        private System.DateTimeOffset? _lastsync;
        private int _finalizata;
        private int _validata;
        private System.DateTimeOffset? _lastupdate;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("nrordine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Nrordine
        {
            get { return _nrordine; }
            set
            {
                if (_nrordine != value)
                {
                    _nrordine = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("docgenid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Docgenid
        {
            get { return _docgenid; }
            set
            {
                if (_docgenid != value)
                {
                    _docgenid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("comandA_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ComandA_ID
        {
            get { return _comandA_ID; }
            set
            {
                if (_comandA_ID != value)
                {
                    _comandA_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("datac", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datac
        {
            get { return _datac; }
            set
            {
                if (_datac != value)
                {
                    _datac = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("artid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Artid
        {
            get { return _artid; }
            set
            {
                if (_artid != value)
                {
                    _artid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretdefc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pretdefc
        {
            get { return _pretdefc; }
            set
            {
                if (_pretdefc != value)
                {
                    _pretdefc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("cantc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Cantc
        {
            get { return _cantc; }
            set
            {
                if (_cantc != value)
                {
                    _cantc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pretc
        {
            get { return _pretc; }
            set
            {
                if (_pretc != value)
                {
                    _pretc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ctvac", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Ctvac
        {
            get { return _ctvac; }
            set
            {
                if (_ctvac != value)
                {
                    _ctvac = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tiptva", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tiptva
        {
            get { return _tiptva; }
            set
            {
                if (_tiptva != value)
                {
                    _tiptva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("rabatc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Rabatc
        {
            get { return _rabatc; }
            set
            {
                if (_rabatc != value)
                {
                    _rabatc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isdiscv", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Isdiscv
        {
            get { return _isdiscv; }
            set
            {
                if (_isdiscv != value)
                {
                    _isdiscv = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("discountv", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Discountv
        {
            get { return _discountv; }
            set
            {
                if (_discountv != value)
                {
                    _discountv = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("retetA_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RetetA_ID
        {
            get { return _retetA_ID; }
            set
            {
                if (_retetA_ID != value)
                {
                    _retetA_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("gestouT_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string GestouT_ID
        {
            get { return _gestouT_ID; }
            set
            {
                if (_gestouT_ID != value)
                {
                    _gestouT_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("descarcat", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Descarcat
        {
            get { return _descarcat; }
            set
            {
                if (_descarcat != value)
                {
                    _descarcat = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("indicatii", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Indicatii
        {
            get { return _indicatii; }
            set
            {
                if (_indicatii != value)
                {
                    _indicatii = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("trimisc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Trimisc
        {
            get { return _trimisc; }
            set
            {
                if (_trimisc != value)
                {
                    _trimisc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isgroup", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Isgroup
        {
            get { return _isgroup; }
            set
            {
                if (_isgroup != value)
                {
                    _isgroup = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("issplit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Issplit
        {
            get { return _issplit; }
            set
            {
                if (_issplit != value)
                {
                    _issplit = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isreturtot", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Isreturtot
        {
            get { return _isreturtot; }
            set
            {
                if (_isreturtot != value)
                {
                    _isreturtot = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isbacsis", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Isbacsis
        {
            get { return _isbacsis; }
            set
            {
                if (_isbacsis != value)
                {
                    _isbacsis = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("felnr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Felnr
        {
            get { return _felnr; }
            set
            {
                if (_felnr != value)
                {
                    _felnr = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("oldrguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Oldrguid
        {
            get { return _oldrguid; }
            set
            {
                if (_oldrguid != value)
                {
                    _oldrguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("mZ_RGUID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MZ_RGUID
        {
            get { return _mZ_RGUID; }
            set
            {
                if (_mZ_RGUID != value)
                {
                    _mZ_RGUID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("nurecalcpret", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Nurecalcpret
        {
            get { return _nurecalcpret; }
            set
            {
                if (_nurecalcpret != value)
                {
                    _nurecalcpret = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ospataR_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OspataR_ID
        {
            get { return _ospataR_ID; }
            set
            {
                if (_ospataR_ID != value)
                {
                    _ospataR_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("sefsalA_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SefsalA_ID
        {
            get { return _sefsalA_ID; }
            set
            {
                if (_sefsalA_ID != value)
                {
                    _sefsalA_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("turA_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TurA_ID
        {
            get { return _turA_ID; }
            set
            {
                if (_turA_ID != value)
                {
                    _turA_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("promotie", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Promotie
        {
            get { return _promotie; }
            set
            {
                if (_promotie != value)
                {
                    _promotie = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("returid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Returid
        {
            get { return _returid; }
            set
            {
                if (_returid != value)
                {
                    _returid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("sesiune", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Sesiune
        {
            get { return _sesiune; }
            set
            {
                if (_sesiune != value)
                {
                    _sesiune = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("sincronizata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Sincronizata
        {
            get { return _sincronizata; }
            set
            {
                if (_sincronizata != value)
                {
                    _sincronizata = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("lastsync", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsync
        {
            get { return _lastsync; }
            set
            {
                if (_lastsync != value)
                {
                    _lastsync = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("finalizata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Finalizata
        {
            get { return _finalizata; }
            set
            {
                if (_finalizata != value)
                {
                    _finalizata = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("validata", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Validata
        {
            get { return _validata; }
            set
            {
                if (_validata != value)
                {
                    _validata = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("lastupdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastupdate
        {
            get { return _lastupdate; }
            set
            {
                if (_lastupdate != value)
                {
                    _lastupdate = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComandaDetDTO : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private int _nrordine;
        private int _artid;
        private double _pretdefctvai;
        private double _cantc;
        private double _pretctvai;
        private double _rabatc;
        private bool _isdiscv;
        private double _discountv;
        private double _ctvac;
        private string _tiptva;
        private string _indicatii;
        private string _promotie;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("nrordine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Nrordine
        {
            get { return _nrordine; }
            set
            {
                if (_nrordine != value)
                {
                    _nrordine = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("artid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Artid
        {
            get { return _artid; }
            set
            {
                if (_artid != value)
                {
                    _artid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretdefctvai", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pretdefctvai
        {
            get { return _pretdefctvai; }
            set
            {
                if (_pretdefctvai != value)
                {
                    _pretdefctvai = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("cantc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Cantc
        {
            get { return _cantc; }
            set
            {
                if (_cantc != value)
                {
                    _cantc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pretctvai", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Pretctvai
        {
            get { return _pretctvai; }
            set
            {
                if (_pretctvai != value)
                {
                    _pretctvai = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("rabatc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Rabatc
        {
            get { return _rabatc; }
            set
            {
                if (_rabatc != value)
                {
                    _rabatc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("isdiscv", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Isdiscv
        {
            get { return _isdiscv; }
            set
            {
                if (_isdiscv != value)
                {
                    _isdiscv = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("discountv", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Discountv
        {
            get { return _discountv; }
            set
            {
                if (_discountv != value)
                {
                    _discountv = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ctvac", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Ctvac
        {
            get { return _ctvac; }
            set
            {
                if (_ctvac != value)
                {
                    _ctvac = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("tiptva", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tiptva
        {
            get { return _tiptva; }
            set
            {
                if (_tiptva != value)
                {
                    _tiptva = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("indicatii", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Indicatii
        {
            get { return _indicatii; }
            set
            {
                if (_indicatii != value)
                {
                    _indicatii = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("promotie", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Promotie
        {
            get { return _promotie; }
            set
            {
                if (_promotie != value)
                {
                    _promotie = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ModIncasareDTO : System.ComponentModel.INotifyPropertyChanged
    {
        private string _modincasare;
        private double _valincasare;
    
        [Newtonsoft.Json.JsonProperty("modincasare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Modincasare
        {
            get { return _modincasare; }
            set
            {
                if (_modincasare != value)
                {
                    _modincasare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("valincasare", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Valincasare
        {
            get { return _valincasare; }
            set
            {
                if (_valincasare != value)
                {
                    _valincasare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComandaDTO : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private string _infocomanda;
        private string _statusc;
        private string _clienT_ID;
        private string _client;
        private string _pdV_ID;
        private System.Collections.Generic.ICollection<ComandaDetDTO> _liniicomanda;
        private System.Collections.Generic.ICollection<ModIncasareDTO> _modalitatiincasare;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("infocomanda", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Infocomanda
        {
            get { return _infocomanda; }
            set
            {
                if (_infocomanda != value)
                {
                    _infocomanda = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("statusc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Statusc
        {
            get { return _statusc; }
            set
            {
                if (_statusc != value)
                {
                    _statusc = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("clienT_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ClienT_ID
        {
            get { return _clienT_ID; }
            set
            {
                if (_clienT_ID != value)
                {
                    _clienT_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("client", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Client
        {
            get { return _client; }
            set
            {
                if (_client != value)
                {
                    _client = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("pdV_ID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PdV_ID
        {
            get { return _pdV_ID; }
            set
            {
                if (_pdV_ID != value)
                {
                    _pdV_ID = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("liniicomanda", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComandaDetDTO> Liniicomanda
        {
            get { return _liniicomanda; }
            set
            {
                if (_liniicomanda != value)
                {
                    _liniicomanda = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("modalitatiincasare", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ModIncasareDTO> Modalitatiincasare
        {
            get { return _modalitatiincasare; }
            set
            {
                if (_modalitatiincasare != value)
                {
                    _modalitatiincasare = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.11.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class InsComandaRaspuns : System.ComponentModel.INotifyPropertyChanged
    {
        private string _rguid;
        private int _docgenid;
        private string _nrcomanda;
    
        [Newtonsoft.Json.JsonProperty("rguid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Rguid
        {
            get { return _rguid; }
            set
            {
                if (_rguid != value)
                {
                    _rguid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("docgenid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Docgenid
        {
            get { return _docgenid; }
            set
            {
                if (_docgenid != value)
                {
                    _docgenid = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        [Newtonsoft.Json.JsonProperty("nrcomanda", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nrcomanda
        {
            get { return _nrcomanda; }
            set
            {
                if (_nrcomanda != value)
                {
                    _nrcomanda = value;
                    RaisePropertyChanged();
                }
            }
        }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.10.8.0 (NJsonSchema v10.3.11.0 (Newtonsoft.Json v12.0.0.0))")]
    public partial class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response; 
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.10.8.0 (NJsonSchema v10.3.11.0 (Newtonsoft.Json v12.0.0.0))")]
    public partial class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108